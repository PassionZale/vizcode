import {
  Grid,
  Img,
  Spline,
  makeScene2D,
  Rect,
  Txt,
  Path,
  Icon,
  RectProps,
} from "@motion-canvas/2d";
import {
  all,
  chain,
  createRef,
  sequence,
  waitFor,
  waitUntil,
} from "@motion-canvas/core";
import { TextStyles } from "@/shared/text-styles";
import logoSvg from "../assets/logo.svg";
import { appear } from "@/shared/utils";

const LOCATIONS = [
  {
    city: "武汉",
    position: [-230, -320] as RectProps["position"],
  },
  {
    city: "深圳",
    position: [230, 330] as RectProps["position"],
  },
];

export default makeScene2D(function* (view) {
  const titleRef = createRef<Txt>();
  const contentRef = createRef<Rect>();
  const gridRef = createRef<Grid>();
  const lineRef = createRef<Spline>();
  const hubeiRef = createRef<Path>();
  const guangdongRef = createRef<Path>();

  const locationRefs = Array.from({ length: LOCATIONS.length }, () =>
    createRef<Rect>()
  );

  view.add(
    <Rect layout size={["100%", "100%"]} fill={"#121b21"} direction={"column"}>
      <Rect
        size={["100%", "25%"]}
        layout
        padding={[40, 20]}
        direction="column"
        alignItems="center"
        justifyContent="space-around"
      >
        <Rect padding={20} fill={"#ffcc00"}>
          <Img size={[180, 180]} src={logoSvg} />
        </Rect>

        <Txt ref={titleRef} {...TextStyles.title}></Txt>
      </Rect>

      <Rect grow={1}>
        <Rect layout={false} ref={contentRef}>
          <Grid
            size={["100%", "50%"]}
            ref={gridRef}
            grow={1}
            stroke={"#666"}
            start={0.5}
            end={0.5}
          />
          <Path
            ref={hubeiRef}
            lineWidth={4}
            stroke={"#f2ebbf"}
            data="M359.008 183.008h-4l4-4.992-6.016-8h-4l-6.016 8-11.008 0.992v6.016h-8l-8 10.016-6.016-10.016-2.016 2.016-6.016-4-4-12.992-11.008 11.008-32 4-6.016-7.008-19.008 0.992-20-7.008-19.008 2.016-12-6.016v6.016h-12l-10.016 11.008 10.016 2.016 8 6.016 12-2.016 15.008 8-4 20.992 4 6.016 14.016-4 4 4 12 2.016 8 4 6.016 6.016-2.016 4 4.992 4-2.016 10.016 6.016 7.008-4 6.016-4.992-4-4 2.016v4l-8 6.016-16-8H180.896v10.016l-10.016 10.016-2.016 8.992h-4v16l6.016 10.016 8 4-2.016 8.992 4 4-4 10.016 4 16-6.016 6.016 8 11.008-6.016 4 2.016 8-4 2.016 20 4v10.016l3.008 4-4.992 7.008 2.016 2.016 11.008-2.016 8 6.016h12l-6.016 6.016 8 2.016 2.016 4 16 8 7.008 32.992-2.016 6.016-7.008 4 2.016 15.008 3.008-2.016v4l-3.008 6.016 0.992 4-3.008 10.016-6.016 4.992-6.016-3.008-4-10.016-6.016 2.016-6.016-4-18.016 10.016-7.008 8.992-2.016-2.016-16 20-4 2.016v-4l-6.016 4-16.992 20.992 2.016-7.008-6.016-8 2.016-2.016-4-2.016-20 15.008-8-11.008 6.016-4-10.016-4-8.992 4-20 19.008-4-4-6.016 4-4-4-2.016-8.992h-4l-11.008 16.992-8-6.016-12 4 2.016 12-4 2.016 24 19.008-4 22.016-4 4v31.008l-12-4-8 6.016v4h8l-2.016 4 4 8 8 3.008 2.016-3.008h4l-4-4 8-14.016h7.008l4 6.016v16.992h4l6.016 8v-8h4v8l4 2.016 2.016-6.016 2.016 6.016h4l-2.016 4 6.016 2.016-6.016 18.016 10.016 7.008-4 12h10.016v-4h4.992l2.016-6.016 4 2.016 4 4-2.016 10.016 6.016 4-4 4 4 10.016 2.016-2.016 10.016 8.992 6.016-2.016v-8.992l-4-4 12-8v-14.016h3.008l2.016-4-3.008-2.016 7.008-4.992v-12l4 2.016v-4l6.016-2.016 2.016-10.016 6.016 4 6.016-4 12 4 2.016-10.016 4.992-2.016-0.992-7.008 4.992-4h30.016l10.016-4 4.992 6.016 12 2.016 6.016 4.992v4l8 2.016 2.016 4 10.016-6.016 2.016-6.016 7.008 2.016 10.016-4.992 4-8-2.016-6.016-10.016-4-3.008-8v-8l3.008-2.016-4.992-4.992v-4h12.992l6.016-4 8 6.016 6.016-4-2.016-8 10.016-2.016 12.992 2.016v8l32 4 4-2.016 11.008 6.016 4 8.992 6.016-2.016 2.016 6.016 16-2.016 2.016 4 8 2.016 19.008-4 28 12-2.016 6.016 12 6.016 0.992-2.016 2.016 11.008 14.016 6.016 2.016 4 4-6.016 8 14.016-2.016 8 6.016-6.016 6.016 2.016 8-14.016h7.008l4 4 6.016-4 4 4 2.016-2.016 8 4 4-8 10.016-8v-4.992l12.992-10.016 4 2.016v15.008l12-12.992-2.016 8.992-12 14.016v6.016l4 16 8-8h6.016l2.016 12.992 10.016-3.008 27.008-36 26.016-20.992 2.016 2.016-4 6.016-2.016 16.992 12.992-2.016 8 12 2.016-2.016 2.016 6.016-14.016 8 16 11.008-4 6.016-8 2.016v6.016l-8 12 12 6.016-4 8 4 12.992 4-4v6.016l12-6.016 4 6.016h4v4l8-4 15.008-20.992h14.016l10.016-4v-16l6.016-2.016 6.016 6.016 11.008-4 4 4h6.016l20-12h6.016l3.008 6.016 10.016-6.016 6.016 2.016 4-6.016 2.016 2.016 2.016-8.992-6.016 6.016-4-6.016 6.016-8v4l2.016-2.016v4h4v-8l6.016-4 4 4 6.016-2.016v6.016l8.992 2.016v-12h-3.008l0.992-10.016h-3.008v-4l4.992 4h12l4 4 8-4 2.016 2.016 14.016-12.992v-8l4.992-8h20l28.992 18.016h8l22.016-14.016v-8l-8-14.016 2.016-23.008-4-4v-8l-10.016-11.008-10.016-4 2.016-2.016-3.008-8 4.992-6.016-4.992-6.016 3.008-8-19.008-24.992 2.016-10.016 6.016 2.016 6.016-6.016-2.016-4.992 4-8 16.992-12h6.016l-2.016-6.016-6.016-2.016v-4l-10.016-2.016 2.016-2.016-7.008-4.992-2.016-6.016-12 4-12-14.016h-4l-8 10.016-4-2.016-4-14.016-8.992-4 2.016-6.016-4-3.008h-8v-10.016l-14.016 4v-4l-6.016-2.016-2.016-4 4-14.016-10.016-8.992-3.008 0.992-4 12-10.016-2.016-4 8-2.016-2.016-18.016 4-6.016-2.016v-6.016l-11.008-2.016 2.016-2.016h-4l-4-6.016-8 4-2.016-2.016-2.016-11.008 6.016-8-2.016-10.016h-4v4l-4-4-8 6.016-20.992-4-6.016-12-8-4-4 4-2.016-2.016v4l-10.016 8-8 2.016-4.992-10.016 2.016-4-4-4-4 4-8-2.016v-7.008l-4-6.016 2.016-2.016-8-4 4-6.016-8-8v-6.016l2.016 2.016 4-4-2.016-3.008 4-4-6.016-6.016 4-20-10.016-8.992-12.992 11.008-6.016 6.016 2.016-4h-4l-12 10.016-8-4-20-19.008-7.008 2.016v3.008l-4 2.016-2.016-4-10.016-3.008-6.016 3.008 2.016 4h-14.016l-4-4-15.008 8-22.016-8-15.008 8-6.016-4-12 6.016-12-10.016-4 2.016-2.016-3.008v3.008l-8-3.008-4.992-10.016-8 4-4-10.016-12 2.016v-4h-4l-16-12h-7.008v-4l-12 6.016-12-19.008 2.016-6.016-2.016-2.016-4 4-8-12-8.992-4-2.016-8-2.016 4-2.016-8 4-4.992-4-10.016h-12l2.016-4h4v-4l-14.016-14.016-6.016 4V183.04zM704 316l-2.016-2.016v4zM359.008 178.016v3.008l2.016-2.016zM571.008 304z m23.008 376.992l-2.016 2.016h6.016z"
            scale={0.4}
            position={[-500, -520]}
            start={0}
            end={0}
          />
          <Spline
            ref={lineRef}
            lineWidth={6}
            stroke={"white"}
            points={[
              [-230, -320],
              [160, -72],
              [-160, 90],
              [230, 330],
            ]}
            end={0}
          />
          <Path
            ref={guangdongRef}
            lineWidth={4}
            stroke={"#efdfec"}
            data="M850.906982 196.608s-18.432 10.752-10.752 31.744c7.68 20.48 14.336 19.968-2.048 24.064-16.384 3.584-27.648-29.696-46.592-27.648-18.944 2.048-121.344 48.128-144.896 28.16s-6.144-55.296 20.992-69.12c27.136-13.312 43.52-41.984 23.552-55.296-19.968-13.312-34.304 13.312-75.264 16.896-40.96 4.096-84.48 4.096-96.256-9.216-11.776-13.312-24.064-28.16-38.4-11.776s-33.792 29.184-24.576 54.272c9.216 25.088-1.536 45.056-27.648 6.144s-64-26.624-72.192-20.48 7.68 31.232-6.656 48.64-30.72 14.336-25.088 35.328c5.632 21.504 5.12 73.728-27.648 114.688-32.768 40.96-62.976 59.392-52.736 138.24-5.12 16.896-38.4 41.984-67.072 50.176-29.184 7.68-30.72 19.968-26.624 32.768 4.096 12.288 14.336 27.648-23.04 31.232s-105.472 63.488-114.688 83.968c-10.752 39.936-22.016 93.184-3.072 143.872 18.432 50.688 48.64 87.04 83.968 61.44s31.232-40.96 2.048-87.04 15.872-74.24 123.904-95.232 166.912-30.208 196.096-40.96c29.184-10.752 62.976-71.168 62.976-71.168s-5.12 55.808 22.016 52.736c26.624-3.072 38.4-61.952 38.4-61.952s1.024-59.392 20.48-56.832 8.704 26.112 27.136 27.648c18.432 1.536 280.576-61.952 366.08-84.48 50.176-51.2 70.144-91.648 72.192-110.592-3.584-26.112-26.112-123.904-47.104-140.8-31.744-6.656-96.256-49.664-127.488-39.424z"
            scale={0.4}
            position={[70, 100]}
            start={0}
            end={0}
          />
        </Rect>
      </Rect>

      <Rect
        size={["100%", "25%"]}
        layout
        padding={40}
        alignItems={"start"}
        justifyContent={"center"}
      >
        <Txt {...TextStyles.title} fill={"#4285F4"}>
          C
        </Txt>
        <Txt {...TextStyles.title} fill={"#FBBC05"}>
          o
        </Txt>
        <Txt {...TextStyles.title} fill={"#EA4335"}>
          d
        </Txt>
        <Txt {...TextStyles.title} fill={"#34A853"}>
          e
        </Txt>
        <Txt {...TextStyles.title}>S</Txt>
        <Txt {...TextStyles.title}>u</Txt>
        <Txt {...TextStyles.title}>g</Txt>
        <Txt {...TextStyles.title}>a</Txt>
        <Txt {...TextStyles.title}>r</Txt>
      </Rect>
    </Rect>
  );

  yield* all(
    titleRef().text("2015", 1),
    gridRef().start(0.5, 1).to(0, 1),
    gridRef().end(0.5, 1).to(1, 1)
  );

  yield* hubeiRef().end(1, 1);
  yield* hubeiRef().fill("#f2ebbf", 1);

  yield* guangdongRef().end(1, 1);
  yield* guangdongRef().fill("#efdfec", 1);

  yield* chain(
    hubeiRef().end(1, 1),
    hubeiRef().fill("#f2ebbf", 1),
    guangdongRef().end(1, 1),
    guangdongRef().fill("#efdfec", 1)
  );

  locationRefs.map((ref, i) => {
    contentRef().add(
      <>
        <Rect
          ref={ref}
          opacity={0}
          layout
					width={200}
					direction={'column'}
					alignItems={'center'}
					justifyContent={'space-around'}
					gap={20}
					scale={1}
          position={LOCATIONS[i].position}
        >
					<Rect>
	          <Txt>{LOCATIONS[i].city}</Txt>
					</Rect>

          <Icon size={40} fill={'blue'} icon="material-symbols:pin-drop-outline" />
        </Rect>
      </>
    );
  });

  yield* sequence(0.15, ...locationRefs.map((ref) => appear(ref())));

  yield* waitFor(3);

  yield* all(gridRef().start(0.5, 1).to(0, 1), gridRef().end(0.5, 1).to(0, 1));

  yield* waitUntil("2015_end");
});
